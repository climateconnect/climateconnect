# Generated by Django 3.2.25 on 2025-04-22 15:54

from django.db import migrations, models


# Mapping based on urlslug to sectors
MAPPING_SECTOR_HUB_TO_SECTOR = {
    "food": "food",
<<<<<<< HEAD
    "landuse": "agri",
    "construction": "industry",
    "biodiversity": None,  # TODO: this is mappend to a sector, but should not be deleted...
=======
    "landuse": None,  # this sector hub will be deleted
    "construction": "housing",
    "biodiversity": "nature",  # TODO: this is mappend to a sector, but should not be deleted...
>>>>>>> master
    "energy": "energy",
    "policy": "policy",  # TODO: do we really want to keep it?
    "education": "education",
    "mobility": "mobility",
    "fashion": None,  # this sector hub will be deleted
}


def link_sectorhubs_to_sectors(apps, schema_editor):
    print()
    Hub = apps.get_model("hubs", "Hub")
    Sector = apps.get_model("organization", "Sector")

    for hub_slug, sector_key in MAPPING_SECTOR_HUB_TO_SECTOR.items():
        if sector_key is None:
            continue

        try:
            hub = Hub.objects.get(url_slug=hub_slug)
            sector = Sector.objects.get(key=sector_key)
            hub.sectors.add(sector)
            print(f"[MIRGRATION] [+] Added sector {sector.key} to hub {hub.name}")
        except Hub.DoesNotExist:
            print(f"[MIRGRATION] [!] Hub with slug {hub_slug} does not exist")
        except Sector.DoesNotExist:
            print(f"[MIRGRATION] [!] Sector with key {sector_key} does not exist.")


####################################################
# auto generateed migration
class Migration(migrations.Migration):

    dependencies = [
        ("organization", "0106_organizationsectormapping_projectsectormapping_sector"),
        ("hubs", "0036_hub_landing_page_component"),
    ]

    operations = [
        migrations.AddField(
            model_name="hub",
            name="sectors",
            field=models.ManyToManyField(
                blank=True,
                help_text="Only projects with these sectors will be shown in the hub",
                related_name="hub_sectors",
                to="organization.Sector",
                verbose_name="Hub sectors",
            ),
        ),
        ####################################################
        # manual addition
        migrations.RunPython(
            link_sectorhubs_to_sectors,
            reverse_code=migrations.RunPython.noop,
        ),
    ]
