# Generated by Django 3.2.25 on 2025-04-30 08:41

from django.db import migrations, models
from organization.models import Organization

# Mapping based on urlslug to sectors
MAPPING_SECTOR_HUB_TO_SECTOR = {
    "food": "food",
    "landuse": "agri",
    "construction": "industry",
    "biodiversity": None,  # TODO: this is mappend to a sector, but should not be deleted...
    "energy": "energy",
    "policy": "policy",  # TODO: do we really want to keep it?
    "education": "education",
    "mobility": "mobility",
    "fashion": None,  # this sector hub will be deleted
}


def link_organization_to_sectors(apps, schema_editor):
    # for each organization, check the related sectorHub and bind the
    Hub = apps.get_model("hubs", "Hub")
    Sector = apps.get_model("organization", "Sector")
    # Organization = apps.get_model("organization", "Organization")

    results = {
        "sucesses": {"count": 0, "objects": []},
        "fails": {"count": 0, "objects": []},
    }

    def fail(org, hub):
        results["fails"]["count"] += 1
        results["fails"]["objects"].append([org, hub])

    def success(org, hub):
        results["sucesses"]["count"] += 1
        results["sucesses"]["objects"].append([org, hub])

    for org in Organization.objects.all():
        for hub in org.hubs.all():
            if not hub.hub_type is Hub.HUB_TYPE_SECTOR:
                fail(org, hub)
                continue

            for sector in hub.sectors.all():
                # if the sector is already in the organization, skip it
                if org.sectors.filter(key=sector.key).exists():
                    continue

                print(f"Adding sector {sector.key:<12} to organization {org.name:<15}")
                org.sectors.add(sector)
                success(org, hub)
    pass


####################################################
# auto generateed migration
class Migration(migrations.Migration):

    dependencies = [
        ("organization", "0106_organizationsectormapping_projectsectormapping_sector"),
        ("hubs", "0036_hub_sectors"),
    ]

    operations = [
        migrations.AddField(
            model_name="organization",
            name="sectors",
            field=models.ManyToManyField(
                blank=True,
                help_text="Sectors that the organization is active in. These sectors will be displayed on the organization page.",
                related_name="organization_sectors",
                to="organization.Sector",
                verbose_name="Sectors",
            ),
        ),
        ####################################################
        # manual addition
        migrations.RunPython(
            link_organization_to_sectors,
            reverse_code=migrations.RunPython.noop,
        ),
    ]
