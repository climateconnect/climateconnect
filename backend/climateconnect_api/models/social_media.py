from tabnanny import verbose
from django.db import models

from organization.models.organization import Organization


class SocialMediaChannel(models.Model):
    social_media_name = models.CharField(
        help_text='Name of the medium e.g. "Twitter"',
        verbose_name="Social Media Channel",
        max_length=256,
        default="",
    )

    ask_for_full_website = models.BooleanField(
        help_text="Checks if user should only provide a handle or full link",
        verbose_name="Ask For Full Website",
        default=False,
    )

    base_url = models.CharField(
        help_text='URL of the medium e.g. "https://twitter.com/"',
        verbose_name="Base URL",
        max_length=256,
        default="",
    )

    class Meta:
        app_label = "climateconnect_api"
        verbose_name = "Social Media Channel"
        verbose_name_plural = "Social Media Channels"
        ordering = ["-id"]

    def __str__(self):
        return "%s (%d)" % (self.social_media_name, self.pk)


class SocialMediaLink(models.Model):
    organization = models.ForeignKey(
        Organization,
        related_name="social_media_link_to_organization",
        verbose_name="Organization for social media",
        help_text="Points to the organization",
        on_delete=models.CASCADE,
    )
    social_media_channel = models.ForeignKey(
        SocialMediaChannel,
        related_name="social_media_link_to_channel",
        verbose_name="Social Media Channel",
        help_text="Points to the social media channel",
        on_delete=models.CASCADE,
    )

    handle = models.CharField(
        # On Twitter this could be 'ConnectClimate' and then the link would be generated by using "https://"+base_url+"/"+handle
        # Parse out @ sign before saving
        # empty if social_media_channel.ask_for_full_website == True
        help_text="Handle of the social media, e.g. @ConnectClimate",
        verbose_name="Social Media Handle",
        max_length=256,
        blank=True,
        default="",
    )

    url = models.CharField(
        # On YouTube this would be the full url
        # empty if social_media_channel.ask_for_full_website == False
        help_text="Full url of the social media e.g. https://twitter.com/ConnectClimate",
        verbose_name="Social Media URL",
        max_length=256,
        blank=True,
        default="",
    )

    created_at = models.DateTimeField(
        help_text="Time when social media link was created",
        verbose_name="Created At",
        auto_now_add=True,
    )

    updated_at = models.DateTimeField(
        help_text="Time when social media link was updated",
        verbose_name="Updated At",
        auto_now=True,
    )

    class Meta:
        app_label = "climateconnect_api"
        verbose_name = "Social Media Link"
        verbose_name_plural = "Social Media Links"
        unique_together = ("organization", "social_media_channel")

    def __str__(self):
        return "%s => %s" % (
            self.social_media_channel.social_media_name,
            self.organization.name,
        )
