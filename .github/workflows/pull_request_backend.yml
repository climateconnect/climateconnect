name: Python linting
on: [pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff==0.0.271
          pip install black==23.12.0  # Pin the version of black here
      - name: Run Black
        run: black backend # run installed black version
        # uses: psf/black@stable # this uses the newest version of black (>23.12)
        # with:
        #   src: backend
      # Include `--format=github` to enable automatic inline annotations.
      - name: Run Ruff
        run: ruff check --format=github backend
  # run_tests:
  #   name: Run Backend Tests (Django, Django REST Framework)
  #   workdirectory: backend
  #   runs-on: ubuntu-latest
  #   needs: build
  #   services:
  #     postgres:
  #       image: postgres/postgres:16.9
  #       ports:
  #         - 5432:5432
  #       env:
  #         POSTGRES_DB: test_db
  #         POSTGRES_USER: user
  #         POSTGRES_PASSWORD: password
  #       options: >-
  #         --health-cmd="pg_isready -U user"
  #         --health-interval=10s
  #         --health-timeout=5s
  #         --health-retries=5
  #   steps:
  #     - uses: actions/checkout@v5
  #     - name: Wait for DB
  #       run: |
  #         echo "Waiting for PostgreSQL to be ready..."
  #         while ! pg_isready -h localhost -p 5432 -U user; do
  #           sleep 1
  #         done
  #         echo "PostgreSQL is ready."
  #     - name: Install Test PostGis to the testdatabase
  #       run: |
  #         psql -h localhost -U user -d testdb -c "CREATE EXTENSION postgis;"
  #       env:
  #         PGPASSWORD: password
  #         PGUSER: user
  #     - name: Install Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: "3.11"
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         cd backend
